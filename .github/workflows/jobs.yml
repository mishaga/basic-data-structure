name: Jobs


on:
  push:
    branches:
      - main


permissions:
  contents: read


jobs:

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          export POETRY_VIRTUALENVS_IN_PROJECT=false
          export POETRY_VIRTUALENVS_CREATE=false
          export POETRY_NO_INTERACTION=1
          export POETRY_VERSION=1.8.2
          curl -sSL https://install.python-poetry.org | python3 -
          poetry install --no-root

      - name: Analysing the code with flake8
        run: flake8 --count basic_data_structure/


  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          export POETRY_VIRTUALENVS_IN_PROJECT=false
          export POETRY_VIRTUALENVS_CREATE=false
          export POETRY_NO_INTERACTION=1
          export POETRY_VERSION=1.8.2
          curl -sSL https://install.python-poetry.org | python3 -
          poetry install --no-root

      - name: Testing code with pytest
        run: pytest -v


  build-doc:
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          export POETRY_VIRTUALENVS_IN_PROJECT=false
          export POETRY_VIRTUALENVS_CREATE=false
          export POETRY_NO_INTERACTION=1
          export POETRY_VERSION=1.8.2
          curl -sSL https://install.python-poetry.org | python3 -
          poetry install --no-root

      - name: Generate documentation
        run: |
          mkdir docs
          pdoc -o docs/ -d google --no-search --no-show-source basic_data_structure

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/


  deploy-doc:
    needs: build-doc
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
